{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./source-code/server/server-websocket.service.ts","webpack:///./source-code/server/server.ts","webpack:///external \"express\"","webpack:///external \"socket.io\""],"names":[],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {Socket} from 'socket.io';\nimport {Server} from 'socket.io';\nimport * as socketio from 'socket.io'\nimport Player from '../interfaces/player';\nimport { ClientToServer } from '../interfaces/client-to-server.interface';\nimport { ServerToClient } from '../interfaces/server-to-client.interface';\nimport ServerPlayer from '../interfaces/server-player';\n\nexport default class ServerWebsocketService {\n  websocketServer: Server\n  connectedPlayers: ServerPlayer[] = []\n  constructor(port: number){\n    this.websocketServer = socketio.listen(port)\n    this.websocketServer.on(\"connection\", (socket: Socket) => {\n      console.log('connection');\n      socket.on('client to server', \n        (clientToServer) => this.event(clientToServer, socket)) \n      socket.on('disconnect', (reason) => {\n        console.log('reason :', reason);\n        const disconnectingPlayer = this.connectedPlayers.find((player: ServerPlayer) => \n        player.socket.id == socket.id)\n        if(disconnectingPlayer){\n          this.removePlayer(disconnectingPlayer)\n        } else {\n          console.log('now that does not make sense');\n        }\n\n      });\n    });\n    \n  }\n\n  event(clientToServer: ClientToServer, socket: Socket){\n    switch(clientToServer.name){\n      case 'connect' : {\n        this.handleConnect(clientToServer, socket)\n      }\n    }\n  }\n\n  private removePlayer(disconnectingPlayer: ServerPlayer){\n    this.connectedPlayers = this.connectedPlayers.filter(\n      (connectedPlayer: ServerPlayer) => connectedPlayer.socket.id != disconnectingPlayer.socket.id)\n    this.broadcastUpdatedConnectedPlayers()\n  }\n\n\n  private handleConnect(clientToServer: ClientToServer, socket: Socket){\n    console.log('its bout time client connected to server');\n    let player: ServerPlayer\n    let clientPlayer: Player = clientToServer.data\n    let foundPlayer: ServerPlayer = this.connectedPlayers.find(player => player.name == clientPlayer.name)\n    if(foundPlayer){\n      foundPlayer = {...foundPlayer, name: clientPlayer.name, socket:  socket, connected: true}\n      player = foundPlayer\n    }\n    else {\n      const newPlayer: ServerPlayer = { \n        name: clientPlayer.name, \n        socket:  socket, \n        connected: true, \n        clientId: clientToServer.clientId, \n        gameId: null\n      }\n      this.connectedPlayers.push(newPlayer)\n      player = newPlayer\n    }\n\n\n    this.sendToClient(player, {name: 'player connected', transactionId: clientToServer.transactionId})\n    this.broadcastUpdatedConnectedPlayers()\n  }\n\n  private sendToClient(player: ServerPlayer, serverToClient: ServerToClient): void {   \n    player.socket.emit('server to client', serverToClient)\n  }\n\n  broadcastUpdatedConnectedPlayers(){\n    const updateForAllClients: ServerToClient = {\n      name: 'connected players update', \n      data: [...this.connectedPlayers].map(this.convertToClientPlayer)\n    }\n    this.updateAllClients(updateForAllClients)\n  }\n\n  updateAllClients(serverToClient: ServerToClient){\n    this.connectedPlayers.forEach((player: ServerPlayer) => {\n      player.socket.emit('server to client', serverToClient)\n    })\n  }\n\n  convertToClientPlayer(serverPlayer: ServerPlayer): Player{\n    const player: Player = {\n      name: serverPlayer.name,\n      connected: serverPlayer.connected,\n      clientId: serverPlayer.clientId,\n      gameId: serverPlayer.gameId\n    }\n    return player\n  }\n  \n\n  \n}","import ServerWebsocketService from './server-websocket.service';\nimport * as express from 'express';\n\nconsole.clear()\nconst app = express()\nconst serverPort = 4444\nconst websocketPort = 69\napp.use(express.static('compiled-code/client'))\napp.listen(serverPort, () => console.log('server listening on port ' + serverPort))\nnew ServerWebsocketService(websocketPort)","module.exports = require(\"express\");","module.exports = require(\"socket.io\");"],"sourceRoot":""}